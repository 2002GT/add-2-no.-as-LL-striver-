
//  ADD TWO NUMBERS AS LINKED LIST 


#include<iostream>
#include<bits/stdc++.h>
using namespace std; 

struct node{
int data;
struct node *next;
node(int x):data(x),next(NULL){}
node():data(0),next(NULL){}
};
//add two no given as reverse digits ll form

node* ad2noasll(node *head1,node *head2){
    node* temp1=head1;
    node*temp2=head2;
    node* res = new node();//dummy node creation 
    node* current=res;
    int carry=0;
   while(temp1 || temp2 || carry){
       int sum=0;
       if(temp1 != NULL){
           sum +=temp1->data;
           temp1=temp1->next;
       }
       
       if(temp2 != NULL){
           sum+=temp2->data;
           temp2=temp2->next;
       }
       sum += carry;
       carry =sum/10;
      node* helper = new node(sum%10);
       current->next=helper;
       current=helper;
       }
    return res->next;
}
int main(){ 
     node n1(1);   // node n1={10,NULL};
     node n2(2);   // node n2={20,NULL};
     node n3(3);   // node n3={30,NULL}; 
     node n4(4);   // node n4={40,NULL};
     node n5(5);   // node n5={50,NULL};
     node n6(6);   // node n6={60,NULL};
     node n7(7);   // node n7={70,NULL};
n1.next=&n2;n2.next=&n3; n3.next=&n4; n4.next=&n5; n5.next=&n6; n6.next=&n7;
node* head1=&n1;
   
    node n21(7);  // node n21={15,NULL};
    node n22(5);  // node n22={25,NULL};
    node n23(6);  // node n23={35,NULL};
    node n24(9);  // node n24={45,NULL};
    node n25(9);  // node n25={55,NULL};
    node n26(8);  // node n26={65,NULL};
    node n27(4);  // node n27={75,NULL};
    
n21.next=&n22;n22.next=&n23; n23.next=&n24; n24.next=&n25; n25.next=&n26; n26.next=&n27;
node* head2=&n21;

node *temp=ad2noasll(head1,head2);

while(temp){
cout<<temp->data<<" ";
temp=temp->next;
}

return 0;
}
